<catel:Window x:Class="Catel.Examples.Behaviors.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:catel="http://schemas.catelproject.com"
              xmlns:xamlbehaviors="http://schemas.microsoft.com/xaml/behaviors">

    <catel:DataWindow.Resources>
        <catel:BooleanToCollapsingVisibilityConverter x:Key="BooleanToCollapsingVisibilityConverter" />

        <Style TargetType="GroupBox">
            <Setter Property="Margin" Value="6" />
        </Style>
    </catel:DataWindow.Resources>

    <Grid x:Name="behaviorsRootStackGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400" />
            <ColumnDefinition Width="400" />
        </Grid.ColumnDefinitions>

        <GroupBox Grid.Row="0" Grid.Column="0" Header="DelayBindingUpdate">
            <StackPanel Orientation="Vertical">
                <Label>
                    <TextBlock TextWrapping="Wrap">
                        Change a value and the value will update one second later.
                    </TextBlock>
                </Label>

                <ListBox ItemsSource="1234" SelectedItem="{Binding DelayBindingUpdateValue}">
                    <xamlbehaviors:Interaction.Behaviors>
                        <catel:DelayBindingUpdate DependencyPropertyName="SelectedItem" UpdateDelay="1000" />
                    </xamlbehaviors:Interaction.Behaviors>
                </ListBox>
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="0" Grid.Column="1" Header="DoubleClickToCommand">
            <StackPanel Orientation="Vertical">
                <Label>
                    <TextBlock TextWrapping="Wrap">
                        Double click the image below.
                    </TextBlock>
                </Label>

                <Image Source="/Resources/Images/catel.png" Width="32" Height="32"
                       HorizontalAlignment="Center" VerticalAlignment="Center">
                    <xamlbehaviors:Interaction.Behaviors>
                        <catel:DoubleClickToCommand Command="{Binding DoubleClickToCommandExample}" />
                    </xamlbehaviors:Interaction.Behaviors>
                </Image>
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="1" Grid.Column="0" Header="EventToCommand">
            <StackPanel Orientation="Vertical">
                <Label>
                    <TextBlock TextWrapping="Wrap">
                    This behavior shows a message box when the 'LostFocus' event occurs in the calender.
                    </TextBlock>
                </Label>

                <Calendar>
                    <xamlbehaviors:Interaction.Triggers>
                        <xamlbehaviors:EventTrigger EventName="LostFocus">
                            <catel:EventToCommand Command="{Binding EventToCommandForLostFocus}" DisableAssociatedObjectOnCannotExecute="False" />
                        </xamlbehaviors:EventTrigger>
                    </xamlbehaviors:Interaction.Triggers>
                </Calendar>
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="1" Grid.Column="1" Header="Focus">
            <StackPanel Orientation="Vertical">
                <Label>
                    <TextBlock TextWrapping="Wrap">
                        Note that when the window is loaded, the TextBox below has the focus
                    </TextBlock>
                </Label>

                <TextBox Text="Focus is here when the control is loaded">
                    <xamlbehaviors:Interaction.Behaviors>
                        <catel:Focus FocusMoment="Loaded" />
                    </xamlbehaviors:Interaction.Behaviors>
                </TextBox>

                <TextBox Text="Focus on event, on MouseEnter of this TextBox" x:Name="mouseEnterTextBox">
                    <xamlbehaviors:Interaction.Behaviors>
                        <catel:Focus FocusMoment="Event" EventName="MouseEnter" Source="{Binding ElementName=mouseEnterTextBox}" />
                    </xamlbehaviors:Interaction.Behaviors>
                </TextBox>

                <TextBox Text="Focus on property changed, when ListBox value has changed">
                    <xamlbehaviors:Interaction.Behaviors>
                        <catel:Focus FocusMoment="PropertyChanged" PropertyName="DelayBindingUpdateValue" Source="{Binding }" />
                    </xamlbehaviors:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="2" Grid.Column="0" Header="KeyPressToCommand">
            <StackPanel Orientation="Vertical">
                <Label>
                    <TextBlock TextWrapping="Wrap">
                        The 'KeyPressToCommandExample' command will be executed when the [Ctrl] + [Backspace] keys are pressed on the ListBox.
                    </TextBlock>
                </Label>

                <ListBox ItemsSource="1234">
                    <xamlbehaviors:Interaction.Behaviors>
                        <catel:KeyPressToCommand Command="{Binding KeyPressToCommandExample}" Key="Back" Modifiers="Control" />
                    </xamlbehaviors:Interaction.Behaviors>
                </ListBox>
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="2" Grid.Column="1" Header="MouseInfo">
            <StackPanel Orientation="Vertical">
                <Label>
                    <TextBlock TextWrapping="Wrap">
                    <xamlbehaviors:Interaction.Behaviors>
                        <catel:MouseInfo x:Name="mouseInfo" />
                    </xamlbehaviors:Interaction.Behaviors>
                    
                    Hover this text to show the ListBox.
                    </TextBlock>
                </Label>

                <ListBox ItemsSource="1234" Visibility="{Binding ElementName=mouseInfo, Path=IsMouseOver, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}" />
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="3" Grid.Column="0" Header="NumericTextBox">
            <StackPanel Orientation="Vertical">
                <Label>
                    <TextBlock TextWrapping="Wrap">
                    This textbox only allows numeric characters. The allowed characters can be fully customized.
                    </TextBlock>
                </Label>

                <Label>
                    <TextBlock Text="{Binding NumericValue, StringFormat=Last known value: {0}}" />
                </Label>

                <TextBox Text="{Binding NumericValue}">
                    <xamlbehaviors:Interaction.Behaviors>
                        <catel:NumericTextBox />
                    </xamlbehaviors:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="3" Grid.Column="1" Header="SelectTextOnFocus">
            <StackPanel Orientation="Vertical">
                <Label>
                    <TextBlock TextWrapping="Wrap">
                    When the TextBox receives the focus, all text is selected.
                    </TextBlock>
                </Label>

                <TextBox Text="All text should be selected">
                    <xamlbehaviors:Interaction.Behaviors>
                        <catel:SelectTextOnFocus />
                    </xamlbehaviors:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="4" Grid.Column="1" Header="UpdateBindingOnTextChanged">
            <StackPanel Orientation="Vertical">
                <Label>
                    <TextBlock TextWrapping="Wrap">
                    Type the textbox and see the binding update happening after 500 ms when the user stops typing.
                    </TextBlock>
                </Label>

                <TextBox Text="{Binding UpdateBindingOnTextChangedValue, Mode=TwoWay}">
                    <xamlbehaviors:Interaction.Behaviors>
                        <catel:UpdateBindingOnTextChanged UpdateDelay="500" />
                    </xamlbehaviors:Interaction.Behaviors>
                </TextBox>

                <TextBlock Text="{Binding UpdateBindingOnTextChangedValue}" />
            </StackPanel>
        </GroupBox>
    </Grid>
</catel:Window>
